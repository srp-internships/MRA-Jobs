@page "/dashboard/vacancy"
@layout Dashboard

@using MRA.Jobs.Application.Contracts.VacancyCategories.Responses;
@using MRA.Jobs.Domain.Enums;
@inject IVacancyService VService
@inject ICategoryService CService

<h3>Vacancy</h3>
@if (_category == null)
{
    <div>Loading</div>
}
else
{
    <MatAccordion>
        <MatExpansionPanel @bind-Expanded="@panelOpenState">
            <MatExpansionPanelSummary>
                <MatExpansionPanelHeader>Inserting a new Job</MatExpansionPanelHeader>
            </MatExpansionPanelSummary>
            <MatExpansionPanelDetails Style="display: flex;flex-direction: column;">
                <MatTextField @bind-Value="@VService.creatingNewJob.Title" PlaceHolder="Title"></MatTextField>
                <MatTextField @bind-Value="@VService.creatingNewJob.ShortDescription" PlaceHolder="ShortDescription"></MatTextField>
                <MatTextField @bind-Value="@VService.creatingNewJob.Description" PlaceHolder="Description"></MatTextField>
                <MatTextField @bind-Value="@VService.creatingNewJob.RequiredYearOfExperience" PlaceHolder="RequiredYearOfExperience"></MatTextField>

                <MatSelectItem @bind-Value="VService.creatingNewJob.WorkSchedule" Items="@value2Items">
                </MatSelectItem>
                <p> 
                    Selected value: @work
                </p>

                <MatSelectValue @bind-Value="VService.creatingNewJob.CategoryId" Items="@_category" ValueSelector="@(i=>i.Id)">
                    <ItemTemplate>
                        <span>@context?.Name</span>
                    </ItemTemplate>
                </MatSelectValue>
                <MatDatePicker @bind-Value="VService.creatingNewJob.EndDate" Format="MM/dd/yy H:mm:ss"></MatDatePicker>
                <MatDatePicker @bind-Value="VService.creatingNewJob.PublishDate" Format="MM/dd/yy H:mm:ss"></MatDatePicker>
                <MatButton @onclick="@VService.OnSaveCreateClick">Insert</MatButton>
            </MatExpansionPanelDetails>
        </MatExpansionPanel>
    </MatAccordion>

}

@code {
    WorkSchedule work;
    WorkSchedule[] value2Items = Enum.GetValues(typeof(WorkSchedule)).Cast<WorkSchedule>().ToArray();


    private List<CategoryResponse> _category;
    protected override async Task OnInitializedAsync()
    {
        _category = await VService.GetAllCategory();
    }
    bool panelOpenState;
}
